// lab0311.cpp: определяет точку входа для консольного приложения.
//перегрузка операторов,перегрузка функций
//перегрузка-объявление нескольких функций, методов или операторов,которые с одинаковыми именами но разными наборами аргументов
//различие функции по одному параметру-не перегрузка
//Неважно, какой тип аргумента возвращает, важно, какие принимает - тогда перегруженная
//Если есть необяхзательные арги, то это перегруженная
//Важны и последовательность, и типы переменных.
//Компилятор: проверяет Совпадение- затем простейшее приведение типов - 
//затем, если нет того, то * в void, float в double
// Унарные операторы перегружаются внутри класса, 
//бинаные - как дружественные глобально. Потоковые как бин, равно как унарный
//Унарарные записывают в объект, который вызвал. Поэтому внутри класса писать. 
//+= унарный
//Sample_class & operator +=(const Sample_class & operand)
//{
//property1=property1+operand.property1;
//this->property2=this->property2+property1;

#include "stdafx.h"
#include <iostream>
double getElem(int a, char b);
double getElem(int a_l, char b_l, int c_k);
double getElem(int a, char b)
{
	return a*b;
}
double getElem(int a_l, char b_l, int c_k) 
{
	return a_l + b_l + c_k;
}
int main()
{
		std::cout << "a*b="  << getElem(5,6) << std::endl; 
		std::cout << "a_l+b_l+c_k=" << getElem(3,6.5,8) << std::endl;
		return 0;
	}

