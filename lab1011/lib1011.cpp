#include "stdafx.h"
#include "lib1011.h"
#include <iostream>
//ДИНАМИЧЕСКИЕ И СТАТИЧЕСКИЕ БИБЛИОТЕКИ
//.lib-файлы статически подкл библиотек(win)
//.dll(Dynamic Linked Library)-файлы динамически подкл библиотек (win)
//linux: .lib=.a .dll=.so (source object0
//содержат машинный код для многократного повторного использования
//код из статических библиотек хранится в .exe в момент его сборки(после компиляции)
// далее является частью .ехе
// если несколько .ехе используют один и тот же .lib код дублируется в каждом .ехе
//поставляются отдельно,
//одним и тем же dll файлом на машине пользователя могут пользоваться несколько приложений одновременно(системные,и тп)
//3.1преимущества и недостатки dll
//-хранятся в виде отдельных файлов и могут потеряться
//+отдельным файлом могут пользоваться сразу несколько приложений
//+размер ехе файла НЕ увеличивается при использовании функций dll
//в отличие от использования lib
//+ dll может быть загружена в память только в тот момент,когда она потребуется
//затем-выгружена
//- необходимость слежки за версией dll
//-требует наличие инсталлятора(самим прописывать) для развертки нужных файлов на машине пользователя 
//-более сложная структура кода и подключение в .ехе
//3.2 типы подключения dll в приложениях
//статическое связывание и динамическое связывание
//статическое: DLL грузится в ОП сразу при запуске приложения
//при отсутствии DLL -сбой,прил.не работает
//такой подход требует наличие 3 файлов:
// готовую dll, header, промежуточный lib библиотеки-
//-которая хранит для сборщика приложения адреса используемых функций в dll
//динамическое подключение dll
//подключается не при запуске приложения, а в тот момент, в который определил программист
//с помощью вызова спец. функции load library
// третий lib файл не нужен, нужны только h и dll
//функции внутри dll ищутся по имени getprocadress
//+не нужен 3 файл с таблицей,библиотека подключается по необходимости
//-усложняется работа с  кодом приложения
//3.3 подключение dll в проект приложения
// в случае статического связывания:
//1.в код подключается header с объявлениями 
//2.в настройки компановщика подключается lib с таблицей
//в настройки проекта подкл lib с таблицей и прописывается путь к ней
//3.dll должна быть размещена рядом с ехе,либо в системных директориях
//Динамическое связывание:
//в исходный код подключен header
//DLL -рядом с ехе
//в коде вызывается перед использованием функции библиотеки loadlibrary
//перед использованием каждая библио функция ищется с помощью getprocadress
//3.4 Точка входа библиотеки
//в dll можно определить функцию dllmain которая будет вызываться автоматически при загрузке библиотеки
//


//динамические:явные и неявные


int func1(double p1, char p2)
{
	return p1+p2;
}
